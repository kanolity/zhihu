syntax = "v1"

type (
	FollowReq {
		FollowedUserId int64 `json:"followed_user_id"` // 被关注者
	}
	FollowResp  {}
	UnFollowReq {
		FollowedUserId int64 `json:"followed_user_id"`
	}
	UnFollowResp  {}
	FollowListReq {
		Cursor   int64 `form:"cursor"`
		PageSize int64 `form:"page_size"`
	}
	FollowListResp {
		Items  []FollowItem `json:"items"`
		Cursor int64        `json:"cursor"`
		IsEnd  bool         `json:"is_end"`
	}
	FollowItem {
		Id             int64 `json:"id"`
		FollowedUserId int64 `json:"followed_user_id"`
		FansCount      int64 `json:"fans_count"`
		CreateTime     int64 `json:"create_time"`
	}
	FansListReq {
		Cursor   int64 `form:"cursor"`
		PageSize int64 `form:"page_size"`
	}
	FansListResp {
		Items  []FansItem `json:"items"`
		Cursor int64      `json:"cursor"`
		IsEnd  bool       `json:"is_end"`
	}
	FansItem {
		UserId      int64 `json:"user_id"`
		FansUserId  int64 `json:"fans_user_id"`
		FollowCount int64 `json:"follow_count"`
		FansCount   int64 `json:"fans_count"`
		CreateTime  int64 `json:"create_time"`
	}
)

@server (
	prefix: /api/follow
	jwt:    Auth
)
service follow-api {
	@handler follow
	post /follow (FollowReq) returns (FollowResp)

	@handler unfollow
	post /unfollow (UnFollowReq) returns (UnFollowResp)

	@handler followList
	get /list (FollowListReq) returns (FollowListResp)

	@handler fansList
	get /fanslist (FansListReq) returns (FansListResp)
}

