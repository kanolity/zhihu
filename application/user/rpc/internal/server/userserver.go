// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: user.proto

package server

import (
	"context"

	"go_code/zhihu/application/user/rpc/internal/logic"
	"go_code/zhihu/application/user/rpc/internal/svc"
	"go_code/zhihu/application/user/rpc/types/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserServer
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) Register(ctx context.Context, in *user.RegisterRequest) (*user.RegisterResponse, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserServer) FindById(ctx context.Context, in *user.FindByIdRequest) (*user.FindByIdResponse, error) {
	l := logic.NewFindByIdLogic(ctx, s.svcCtx)
	return l.FindById(in)
}

func (s *UserServer) FindByMobile(ctx context.Context, in *user.FindByMobileRequest) (*user.FindByMobileResponse, error) {
	l := logic.NewFindByMobileLogic(ctx, s.svcCtx)
	return l.FindByMobile(in)
}

func (s *UserServer) FindByUsername(ctx context.Context, in *user.FindByUsernameRequest) (*user.FindByUsernameResponse, error) {
	l := logic.NewFindByUsernameLogic(ctx, s.svcCtx)
	return l.FindByUsername(in)
}

func (s *UserServer) SendSms(ctx context.Context, in *user.SendSmsRequest) (*user.SendSmsResponse, error) {
	l := logic.NewSendSmsLogic(ctx, s.svcCtx)
	return l.SendSms(in)
}

func (s *UserServer) ChangeAvatar(ctx context.Context, in *user.ChangeAvatarRequest) (*user.ChangeAvatarResponse, error) {
	l := logic.NewChangeAvatarLogic(ctx, s.svcCtx)
	return l.ChangeAvatar(in)
}

func (s *UserServer) ChangePassword(ctx context.Context, in *user.ChangePasswordRequest) (*user.ChangePasswordResponse, error) {
	l := logic.NewChangePasswordLogic(ctx, s.svcCtx)
	return l.ChangePassword(in)
}
