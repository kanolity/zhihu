syntax = "v1"

type (
	PostReplyReq {
		BizId         string `json:"biz_id"`
		TargetId      int64  `json:"target_id"`
		ReplyUserId   int64  `json:"reply_user_id"`
		BeReplyUserId int64  `json:"be_reply_user_id"`
		ParentId      int64  `json:"parent_id"`
		Content       string `json:"content"`
	}
	PostReplyResp {
		Id int64 `json:"id"`
	}
	GetRepliesReq {
		BizId    string `form:"biz_id"`
		TargetId int64  `form:"target_id"`
		Cursor   int64  `form:"cursor"`
		Limit    int64  `form:"limit"`
	}
	Reply {
		Id            int64  `json:"id"`
		BizId         string `json:"biz_id"`
		TargetId      int64  `json:"target_id"`
		ReplyUserId   int64  `json:"reply_user_id"`
		BeReplyUserId int64  `json:"be_reply_user_id"`
		ParentId      int64  `json:"parent_id"`
		Content       string `json:"content"`
		LikeNum       int64  `json:"like_num"`
		IsDeleted     bool   `json:"is_deleted"`
		CreateTime    string `json:"create_time"`
	}
	GetRepliesResp {
		Replies []Reply `json:"replies"`
		HasMore bool    `json:"has_more"`
	}
	GetReplytNumReq {
		ArticleId int64 `form:"article_id"`
	}
	GetReplytNumResp {
		CommentNum int64 `json:"comment_num"`
	}
)

@server (
	prefix: /api/reply
	jwt:    Auth
)
service reply-api {
	@handler postReply
	post /post_reply (PostReplyReq) returns (PostReplyResp)

	@handler getReplies
	get /list (GetRepliesReq) returns (GetRepliesResp)

	@handler getReplyNum
	get /replynums (GetReplytNumReq) returns (GetReplytNumResp)
}

