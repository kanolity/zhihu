// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: chat.proto

package server

import (
	"context"

	"go_code/zhihu/application/chat/rpc/internal/logic"
	"go_code/zhihu/application/chat/rpc/internal/svc"
	"go_code/zhihu/application/chat/rpc/types/chat"
)

type ChatServiceServer struct {
	svcCtx *svc.ServiceContext
	chat.UnimplementedChatServiceServer
}

func NewChatServiceServer(svcCtx *svc.ServiceContext) *ChatServiceServer {
	return &ChatServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *ChatServiceServer) CreateSession(ctx context.Context, in *chat.CreateSessionRequest) (*chat.CreateSessionReply, error) {
	l := logic.NewCreateSessionLogic(ctx, s.svcCtx)
	return l.CreateSession(in)
}

func (s *ChatServiceServer) SendMessage(ctx context.Context, in *chat.SendMessageRequest) (*chat.SendMessageReply, error) {
	l := logic.NewSendMessageLogic(ctx, s.svcCtx)
	return l.SendMessage(in)
}

func (s *ChatServiceServer) GetMessages(ctx context.Context, in *chat.GetMessagesRequest) (*chat.GetMessagesReply, error) {
	l := logic.NewGetMessagesLogic(ctx, s.svcCtx)
	return l.GetMessages(in)
}

func (s *ChatServiceServer) GetChatList(ctx context.Context, in *chat.GetChatListRequest) (*chat.GetChatListResponse, error) {
	l := logic.NewGetChatListLogic(ctx, s.svcCtx)
	return l.GetChatList(in)
}
