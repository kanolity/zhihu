// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: message.proto

package server

import (
	"context"

	"go_code/zhihu/application/message/rpc/internal/logic"
	"go_code/zhihu/application/message/rpc/internal/svc"
	"go_code/zhihu/application/message/rpc/types/message"
)

type MessageServiceServer struct {
	svcCtx *svc.ServiceContext
	message.UnimplementedMessageServiceServer
}

func NewMessageServiceServer(svcCtx *svc.ServiceContext) *MessageServiceServer {
	return &MessageServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *MessageServiceServer) SendMessage(ctx context.Context, in *message.SendMessageRequest) (*message.SendMessageReply, error) {
	l := logic.NewSendMessageLogic(ctx, s.svcCtx)
	return l.SendMessage(in)
}

func (s *MessageServiceServer) GetMessages(ctx context.Context, in *message.GetMessagesRequest) (*message.GetMessagesReply, error) {
	l := logic.NewGetMessagesLogic(ctx, s.svcCtx)
	return l.GetMessages(in)
}

func (s *MessageServiceServer) MarkAsRead(ctx context.Context, in *message.MarkAsReadRequest) (*message.MarkAsReadReply, error) {
	l := logic.NewMarkAsReadLogic(ctx, s.svcCtx)
	return l.MarkAsRead(in)
}
