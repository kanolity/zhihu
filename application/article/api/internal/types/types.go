// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package types

type ArticleDeletedRequest struct {
	ArticleId int64 `json:"article_id"`
}

type ArticleDeletedResponse struct {
}

type ArticleDetailRequest struct {
	ArticleId int64 `form:"article_id"`
}

type ArticleDetailResponse struct {
	Title      string   `json:"title"`
	Content    string   `json:"content"`
	AuthorId   string   `json:"author_id"`
	AuthorName string   `json:"author_name"`
	TagNames   []string `json:"tag_names"`
}

type ArticleInfo struct {
	ArticleId int64    `json:"article_id"`
	Title     string   `json:"title"`
	Content   string   `json:"content"`
	TagNames  []string `json:"tag_names"`
	LikeNum   int64    `json:"like_num"`
}

type ArticleListRequest struct {
	AuthorId  int64 `form:"author_id"`
	Cursor    int64 `form:"cursor"`
	PageSize  int64 `form:"page_size"`
	SortType  int32 `form:"sort_type"` // 0=发布时间，1=点赞数
	ArticleId int64 `form:"article_id"`
}

type ArticleListResponse struct {
	Articles  []ArticleInfo `json:"articles"`
	Cursor    int64         `json:"cursor"`     // 本页最后一条的排序字段（如时间戳）
	ArticleId int64         `json:"article_id"` // 本页最后一条的文章 ID
	IsEnd     bool          `json:"is_end"`     // 是否已经到底
}

type PendingArticleItem struct {
	ArticleId  int64    `json:"article_id"`
	Title      string   `json:"title"`
	AuthorId   int64    `json:"author_id"`
	AuthorName string   `json:"author_name"`
	Status     int64    `json:"status"` // 状态码
	TagNames   []string `json:"tag_names"`
}

type PublishRequest struct {
	Title   string `json:"title"`
	Content string `json:"content"`
	TagIds  string `json:"tag_ids"` //请求标签列表后，将要添加的标签id使用‘,’拼接成字符串返回
}

type PublishResponse struct {
	ArticleId int64 `json:"article_id"`
}
