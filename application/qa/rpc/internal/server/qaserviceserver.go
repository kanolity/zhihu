// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: qa.proto

package server

import (
	"context"

	"go_code/zhihu/application/qa/rpc/internal/logic"
	"go_code/zhihu/application/qa/rpc/internal/svc"
	"go_code/zhihu/application/qa/rpc/types/qa"
)

type QaServiceServer struct {
	svcCtx *svc.ServiceContext
	qa.UnimplementedQaServiceServer
}

func NewQaServiceServer(svcCtx *svc.ServiceContext) *QaServiceServer {
	return &QaServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *QaServiceServer) CreateQuestion(ctx context.Context, in *qa.CreateQuestionRequest) (*qa.CreateQuestionReply, error) {
	l := logic.NewCreateQuestionLogic(ctx, s.svcCtx)
	return l.CreateQuestion(in)
}

func (s *QaServiceServer) GetQuestion(ctx context.Context, in *qa.GetQuestionRequest) (*qa.GetQuestionReply, error) {
	l := logic.NewGetQuestionLogic(ctx, s.svcCtx)
	return l.GetQuestion(in)
}

func (s *QaServiceServer) AnswerQuestion(ctx context.Context, in *qa.AnswerRequest) (*qa.AnswerReply, error) {
	l := logic.NewAnswerQuestionLogic(ctx, s.svcCtx)
	return l.AnswerQuestion(in)
}

func (s *QaServiceServer) GetAnswers(ctx context.Context, in *qa.GetAnswersRequest) (*qa.GetAnswersReply, error) {
	l := logic.NewGetAnswersLogic(ctx, s.svcCtx)
	return l.GetAnswers(in)
}
