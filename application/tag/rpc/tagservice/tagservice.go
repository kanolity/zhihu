// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: tag.proto

package tagservice

import (
	"context"

	"go_code/zhihu/application/tag/rpc/types/tag"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddTagToResourceReply   = tag.AddTagToResourceReply
	AddTagToResourceRequest = tag.AddTagToResourceRequest
	CreateTagReply          = tag.CreateTagReply
	CreateTagRequest        = tag.CreateTagRequest
	GetResourceTagsReply    = tag.GetResourceTagsReply
	GetResourceTagsRequest  = tag.GetResourceTagsRequest
	GetTagsRequest          = tag.GetTagsRequest
	GetTagsResponse         = tag.GetTagsResponse
	ListTagReply            = tag.ListTagReply
	ListTagRequest          = tag.ListTagRequest
	Tag                     = tag.Tag

	TagService interface {
		CreateTag(ctx context.Context, in *CreateTagRequest, opts ...grpc.CallOption) (*CreateTagReply, error)
		ListTag(ctx context.Context, in *ListTagRequest, opts ...grpc.CallOption) (*ListTagReply, error)
		AddTagToResource(ctx context.Context, in *AddTagToResourceRequest, opts ...grpc.CallOption) (*AddTagToResourceReply, error)
		GetResourceTags(ctx context.Context, in *GetResourceTagsRequest, opts ...grpc.CallOption) (*GetResourceTagsReply, error)
		GetTags(ctx context.Context, in *GetTagsRequest, opts ...grpc.CallOption) (*GetTagsResponse, error)
	}

	defaultTagService struct {
		cli zrpc.Client
	}
)

func NewTagService(cli zrpc.Client) TagService {
	return &defaultTagService{
		cli: cli,
	}
}

func (m *defaultTagService) CreateTag(ctx context.Context, in *CreateTagRequest, opts ...grpc.CallOption) (*CreateTagReply, error) {
	client := tag.NewTagServiceClient(m.cli.Conn())
	return client.CreateTag(ctx, in, opts...)
}

func (m *defaultTagService) ListTag(ctx context.Context, in *ListTagRequest, opts ...grpc.CallOption) (*ListTagReply, error) {
	client := tag.NewTagServiceClient(m.cli.Conn())
	return client.ListTag(ctx, in, opts...)
}

func (m *defaultTagService) AddTagToResource(ctx context.Context, in *AddTagToResourceRequest, opts ...grpc.CallOption) (*AddTagToResourceReply, error) {
	client := tag.NewTagServiceClient(m.cli.Conn())
	return client.AddTagToResource(ctx, in, opts...)
}

func (m *defaultTagService) GetResourceTags(ctx context.Context, in *GetResourceTagsRequest, opts ...grpc.CallOption) (*GetResourceTagsReply, error) {
	client := tag.NewTagServiceClient(m.cli.Conn())
	return client.GetResourceTags(ctx, in, opts...)
}

func (m *defaultTagService) GetTags(ctx context.Context, in *GetTagsRequest, opts ...grpc.CallOption) (*GetTagsResponse, error) {
	client := tag.NewTagServiceClient(m.cli.Conn())
	return client.GetTags(ctx, in, opts...)
}
