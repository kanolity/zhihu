// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: tag.proto

package server

import (
	"context"

	"go_code/zhihu/application/tag/rpc/internal/logic"
	"go_code/zhihu/application/tag/rpc/internal/svc"
	"go_code/zhihu/application/tag/rpc/types/tag"
)

type TagServiceServer struct {
	svcCtx *svc.ServiceContext
	tag.UnimplementedTagServiceServer
}

func NewTagServiceServer(svcCtx *svc.ServiceContext) *TagServiceServer {
	return &TagServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *TagServiceServer) CreateTag(ctx context.Context, in *tag.CreateTagRequest) (*tag.CreateTagReply, error) {
	l := logic.NewCreateTagLogic(ctx, s.svcCtx)
	return l.CreateTag(in)
}

func (s *TagServiceServer) ListTag(ctx context.Context, in *tag.ListTagRequest) (*tag.ListTagReply, error) {
	l := logic.NewListTagLogic(ctx, s.svcCtx)
	return l.ListTag(in)
}

func (s *TagServiceServer) AddTagToResource(ctx context.Context, in *tag.AddTagToResourceRequest) (*tag.AddTagToResourceReply, error) {
	l := logic.NewAddTagToResourceLogic(ctx, s.svcCtx)
	return l.AddTagToResource(in)
}

func (s *TagServiceServer) GetResourceTags(ctx context.Context, in *tag.GetResourceTagsRequest) (*tag.GetResourceTagsReply, error) {
	l := logic.NewGetResourceTagsLogic(ctx, s.svcCtx)
	return l.GetResourceTags(in)
}
